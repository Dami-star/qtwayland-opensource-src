From: chengong <chengong@uniontech.com>
Date: Oct 15, 2020 7:28pm GMT+0800
Subject: 修复dde-control-center修改屏幕缩放比问题

通过hook修改QWaylandScrren::logicalDpi作为缩放factor以后，修改缩放比会导致窗口显示异常。
修复QtWayland中QWindow和QWaylandWindow中geometry转换关系
修复QtWaylandInputDevice中motion事件鼠标位置转换关系

Log: 注意从Qt到kwin中geometry和pos对应关系
Task: https://pms.uniontech.com/zentao/task-view-38793.html
Change-Id: Ib3cf8eafe171bed80dbd432f3da78fde40af78c8

gitlab: https://gitlabwh.uniontech.com/wuhan/debian-patch/qt5.15/qtwayland-opensource-src/-/commit/7eda2220d240b22c43a668a13e6fbaa8b9d1361a#08cd7450c6ecd59e327d0614e196cb042f253971

---

Index: qtwayland-opensource-src/src/client/qwaylandinputdevice.cpp
===================================================================
--- qtwayland-opensource-src.orig/src/client/qwaylandinputdevice.cpp
+++ qtwayland-opensource-src/src/client/qwaylandinputdevice.cpp
@@ -60,6 +60,7 @@
 
 #include <QtGui/private/qpixmap_raster_p.h>
 #include <QtGui/private/qguiapplication_p.h>
+#include <QtGui/private/qhighdpiscaling_p.h>
 #include <qpa/qplatformwindow.h>
 #include <qpa/qplatforminputcontext.h>
 #include <QDebug>
@@ -733,7 +734,12 @@ void QWaylandInputDevice::Pointer::point
 
     QPointF pos(wl_fixed_to_double(surface_x), wl_fixed_to_double(surface_y));
     QPointF delta = pos - pos.toPoint();
-    QPointF global = window->window()->mapToGlobal(pos.toPoint());
+    //we need to changed surface pos, because mapToGlobal use QWindow's globalPosition to caculate global pos
+    QPointF global = window->window()->mapToGlobal(QHighDpi::fromNativePixels(pos.toPoint(), window->window()));
+
+    //we need changed golbal pos back, because processMouseMoveEvent will use fromNativePixels changed pos again
+    global = QHighDpi::toNativePixels(global, window->window());
+
     global += delta;
 
     mSurfacePos = pos;
Index: qtwayland-opensource-src/src/client/qwaylandwindow.cpp
===================================================================
--- qtwayland-opensource-src.orig/src/client/qwaylandwindow.cpp
+++ qtwayland-opensource-src/src/client/qwaylandwindow.cpp
@@ -61,6 +61,7 @@
 #include <QGuiApplication>
 #include <qpa/qwindowsysteminterface.h>
 #include <QtGui/private/qwindow_p.h>
+#include <QtGui/private/qhighdpiscaling_p.h>
 
 #include <QtCore/QDebug>
 #include <QtCore/QThread>
@@ -198,10 +199,13 @@ void QWaylandWindow::initWindow()
         setOrientationMask(s->orientationUpdateMask());
     setWindowFlags(window()->flags());
     QRect geometry = windowGeometry();
+
+    //setGeometry_helper's parameter rect will be scaled if we pass QWindow's geometry
     if (geometry.isEmpty())
-        setGeometry_helper(QRect(QPoint(), QSize(500,500)));
-    else
-        setGeometry_helper(geometry);
+        setGeometry_helper(QHighDpi::toNativePixels(QRect(QPoint(), QSize(500,500)), window()));
+    else {
+        setGeometry_helper(QHighDpi::toNativePixels(window()->geometry(), window()));
+    }
     setMask(window()->mask());
     if (mShellSurface)
         mShellSurface->requestWindowStates(window()->windowStates());
@@ -453,7 +457,10 @@ void QWaylandWindow::setVisible(bool vis
         initWindow();
         mDisplay->flushRequests();
 
-        setGeometry(windowGeometry());
+        //setGeometry's parameter rect will be scaled if we pass QWindow's geometry
+        //so we need use toNativePixels scale QWindow's geometry
+        setGeometry(QHighDpi::toNativePixels(window()->geometry(), window()));
+
         // Don't flush the events here, or else the newly visible window may start drawing, but since
         // there was no frame before it will be stuck at the waitForFrameSync() in
         // QWaylandShmBackingStore::beginPaint().
Index: qtwayland-opensource-src/src/plugins/shellintegration/xdg-shell-v6/qwaylandxdgshellv6.cpp
===================================================================
--- qtwayland-opensource-src.orig/src/plugins/shellintegration/xdg-shell-v6/qwaylandxdgshellv6.cpp
+++ qtwayland-opensource-src/src/plugins/shellintegration/xdg-shell-v6/qwaylandxdgshellv6.cpp
@@ -47,6 +47,7 @@
 #include <QtWaylandClient/private/qwaylandabstractdecoration_p.h>
 
 #include <QtGui/private/qwindow_p.h>
+#include <QtGui/private/qhighdpiscaling_p.h>
 
 QT_BEGIN_NAMESPACE
 
@@ -85,11 +86,12 @@ void QWaylandXdgSurfaceV6::Toplevel::app
 
     m_xdgSurface->m_window->handleWindowStatesChanged(statesWithoutActive);
 
+    bool normalPending = !(m_pending.states & (Qt::WindowMaximized|Qt::WindowFullScreen));
     if (m_pending.size.isEmpty()) {
         // An empty size in the configure means it's up to the client to choose the size
-        bool normalPending = !(m_pending.states & (Qt::WindowMaximized|Qt::WindowFullScreen));
         if (normalPending && !m_normalSize.isEmpty())
-            m_xdgSurface->m_window->resizeFromApplyConfigure(m_normalSize);
+            // We need use toNativePixels to changed QWindow's geometry and set to QWaylandWindow
+            m_xdgSurface->m_window->resizeFromApplyConfigure(QHighDpi::toNativePixels(m_normalSize, m_xdgSurface->m_window->window()));
     } else {
         m_xdgSurface->m_window->resizeFromApplyConfigure(m_pending.size);
     }
